/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Q_auto")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_limitedSlip")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_locked")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("auto")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("limitedSlip")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("locked")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Q_en_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_enFlipFlop")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 2.5;
		}
	}
}

TRANSITION_LIST("Q_auto")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 277.5;
			LEVEL 1 FOR 92.5;
			LEVEL 0 FOR 630.0;
		}
	}
}

TRANSITION_LIST("Q_limitedSlip")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 72.5;
			LEVEL 0 FOR 797.5;
		}
	}
}

TRANSITION_LIST("Q_locked")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 72.5;
			LEVEL 1 FOR 75.0;
			LEVEL 0 FOR 92.5;
			LEVEL 1 FOR 630.0;
		}
	}
}

TRANSITION_LIST("auto")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 270.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 450.0;
		}
	}
}

TRANSITION_LIST("limitedSlip")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 260.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 260.0;
		}
	}
}

TRANSITION_LIST("locked")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 110.0;
			LEVEL 0 FOR 360.0;
		}
	}
}

TRANSITION_LIST("Q_en_CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 235.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 625.0;
		}
	}
}

TRANSITION_LIST("Q_enFlipFlop")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 77.5;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 57.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 67.5;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 92.5;
			LEVEL 1 FOR 12.5;
			LEVEL 0 FOR 617.5;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locked";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "limitedSlip";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "auto";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_enFlipFlop";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_en_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_locked";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_limitedSlip";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_auto";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
